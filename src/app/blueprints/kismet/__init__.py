from flask import Blueprint, redirect, url_for, request
from functools import wraps
from flask_login import login_required
from ...lib.models import *
from ... import app, db, socketio
from ...lib.systemd import Systemd
import eventlet, traceback, time

kismet = Blueprint('kismet', __name__, template_folder='templates', static_url_path='/static', static_folder='../../views/static')

from kismet_client import setup, worker, service_change
eventlet.spawn_after(10,worker)

def sockerio_login_required(f):
    @wraps(f)
    def wrapped(*args, **kwargs):
        if not current_user.is_authenticated: disconnect()
        else: return f(*args, **kwargs)
    return wrapped

@app.before_first_request
def setup_db():
    setup()

@app.context_processor
def inject_data():
    return dict(gpsd=Gpsd.query.get(1).json)

def redirect_url(default='map.live'):
    return request.args.get('next') or \
           request.referrer or \
           url_for(default)

@kismet.route('/toggle',methods=['GET'])
@login_required
def toggle():
    if Systemd.running('kismet'):
        Systemd.stop('kismet')
        service_change(False)
    else:
        Systemd.start('kismet')
        service_change(True)
    return redirect(redirect_url())
