crypt_map=[
    ('None',0),
    ('Unknown',1),
    ('WEP',(1 << 1)),
    ('Layer3',(1 << 2)),
    ('WPA Migration Mode',(1 << 10)),
    ('WEP (40bit)',(1 << 3)),
    ('WEP (104bit)',(1 << 4)),
    ('WPA',(1 << 6)),
    ('WPA+TKIP',(1 << 5)),
    ('WPA+PSK',(1 << 7)),
    ('WPA+AES-OCB',(1 << 8)),
    ('WPA+AES-CCM',(1 << 9)),
    ('WPA+LEAP',(1 << 12)),
    ('WPA+TTLS',(1 << 13)),
    ('WPA+TLS',(1 << 14)),
    ('WPA+PEAP',(1 << 15)),
    ('ISA KMP',(1 << 20)),
    ('PPTP',(1 << 21)),
    ('Fortress',(1 << 22)),
    ('Keyguard',(1 << 23))
]

def get_crypt_str(cryptset):
    if cryptset == 0:
        return crypt_map[0][0]
    elif cryptset == 1:
        return crypt_map[1][0]
    elif cryptset & 0xFFFFF == crypt_map[2][0]:
        return crypt_map[2][0]
    else:
        ret_val = []
        for entry in crypt_map[3:]:
            display, val = entry
            if(cryptset & val):
                ret_val.append(display)
        return ','.join(ret_val)

def get_wpa_version(cryptset):
    wpa_version = None
    if cryptset & (1 << 27): wpa_version=1
    elif cryptset & (1 << 28): wpa_version=2
    return wpa_version

def get_wps(cryptset):
    return cryptset & (1 << 26)

def bssid_parse(client, **fields):
    if not fields.get('bssid',None) is None:
        return {
            'bssid':    fields.get('bssid'),
            'channel':  fields.get('channel','0'),
            'lon':      fields.get('agglon','0'),
            'lat':      fields.get('agglat','0'),
            'alt':      fields.get('aggalt','0')
        }
    return None

def ssid_parse(client, **fields):
    if not fields.get('ssid',None) is None:
        cryptset = int(fields.get('cryptset','0'))
        wps = cryptset & (1 << 26)
        return {
            'ssid':         fields.get('ssid','<Unknown SSID>') if fields.get('cloaked','0')=='0' else '<Hidden SSID>',
            'mac':          fields.get('mac'),
            'crypto':       get_crypt_str(cryptset),
            'wps':          get_wps(cryptset),
            'wpa-version':  get_wpa_version(cryptset),
            'cloaked':      fields.get('cloaked','0')=='1'
        }
    return None
