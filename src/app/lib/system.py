from subprocess import Popen, PIPE
from .. import app
from models import *
import os, shutil

class System:
    @staticmethod
    def reboot():
        proc=Popen(['reboot'],stdin=PIPE,stdout=PIPE,stderr=PIPE)
        stdout,stderr = proc.communicate()
        return proc.returncode == 0

    @staticmethod
    def shutdown():
        proc=Popen(['shutdown', '-h', 'now'],stdin=PIPE,stdout=PIPE,stderr=PIPE)
        stdout,stderr = proc.communicate()
        return proc.returncode == 0

    @staticmethod
    def command(command=[]):
        proc=Popen(command,stdin=PIPE,stdout=PIPE,stderr=PIPE)
        stdout,stderr = proc.communicate()
        return proc.returncode == 0

    @staticmethod
    def delete(folder):
        for the_file in os.listdir(folder):
            file_path = os.path.join(folder, the_file)
            try:
                if os.path.isfile(file_path):
                    os.unlink(file_path)
                elif os.path.isdir(file_path):
                    shutil.rmtree(file_path)
            except Exception as e:
                return False
        return True

    @staticmethod
    def nuke():
        try:
            with app.app_context():
                WiFi.query.delete()
                db.session.commit()
            return System.delete('/var/log/kismet/') \
                and System.delete('/var/log/rtl_sdr/')
        except Exception as e:
            app.logger.error(traceback.format_exc())
            return False
