from subprocess import Popen, PIPE
from .. import app

class Systemd:

    @staticmethod
    def running(name):
        proc=Popen(['systemctl', 'status', '%s.service'%name],stdin=PIPE,stdout=PIPE,stderr=PIPE)
        stdout,stderr = proc.communicate()
        #if len(stdout) > 0: app.logger.debug(stdout)
        #if len(stderr) > 0: app.logger.debug(stderr)
        return "Active: active (running)" in stdout

    @staticmethod
    def stop(name):
        proc=Popen(['systemctl', 'stop', '%s.service'%name],stdin=PIPE,stdout=PIPE,stderr=PIPE)
        stdout,stderr = proc.communicate()
        #if len(stdout) > 0: app.logger.debug(stdout)
        #if len(stderr) > 0: app.logger.debug(stderr)
        return not Systemd.running(name)

    @staticmethod
    def start(name):
        proc=Popen(['systemctl', 'start', '%s.service'%name],stdin=PIPE,stdout=PIPE,stderr=PIPE)
        stdout,stderr = proc.communicate()
        #if len(stdout) > 0: app.logger.debug(stdout)
        #if len(stderr) > 0: app.logger.debug(stderr)
        return Systemd.running(name)
