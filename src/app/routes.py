from flask import Flask, session, request, flash, url_for, redirect, render_template, abort ,g, jsonify
from flask_login import login_user , logout_user , current_user , login_required
from . import app, db, login_manager
from lib.models import User
from flask_wtf.csrf import CSRFError

@app.route('/favicon.ico', methods=['GET'])
def favicon():
    return redirect(url_for('static',filename='favicon.ico'))

@app.after_request
def apply_caching(response):
    response.headers["Server"] = "Microsoft-IIS/8.0"
    response.headers["X-UA-Compatible"] = "IE=Edge,chrome=1"
    response.headers["X-Frame-Options"] = "SAMEORIGIN"
    response.headers["X-XSS-Protection"] = "1; mode=block"
    if response.headers.get("ETag") is not None:
        del response.headers["ETag"]
    return response

@app.errorhandler(CSRFError)
def handle_csrf_error(e):
    return render_template('error.html', title="We've got some trouble | 400 - Bad Request",name="Bad Request",code="Error 400",reason=e.description), 400

"""
@app.errorhandler(404)
@app.errorhandler(500)
def errorpage(error):
    app.logger.error('Server Error: %s', (error))
    return render_template('error.html', error=error), error.code

@app.errorhandler(Exception)
def exceptionpage(error):
    app.logger.error('Server Error: %s', (error))
    return render_template('error.html', error=error), 500
"""

def menu(active=None):
    g.menu = {'dashboard':'','map':'','data':'','settings':'','passwords':''}
    if not active is None and not g.menu.get(active) is None:
        g.menu[active]='active'

@app.before_request
def check_app_state():
    """ redirect default rquests to app """
    if request.endpoint is None:
        return redirect(url_for('session.login'))
    menu()

@app.route('/user')
@login_required
def usettings():
    return render_template('pages/user/settings.html')
